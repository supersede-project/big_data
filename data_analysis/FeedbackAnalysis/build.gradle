// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'


buildscript {
    repositories {
        mavenCentral()
        maven {
            url "${artifactory_contextUrl}/libs-snapshot"
            name = 'maven-supersede-snapshot'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        maven {
            url "${artifactory_contextUrl}/libs-release"
            name = 'maven-supersede-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    	maven {
        	url "https://jitpack.io"
    	}
	//mavenLocal()
    mavenCentral()
    add buildscript.repositories.getByName ("maven-supersede-snapshot")
    add buildscript.repositories.getByName ("maven-supersede-release")
}

dependencies {
    compile 'nz.ac.waikato.cms.weka:weka-stable:3.8.0'
    compile 'edu.stanford.nlp:stanford-corenlp:3.6.0'
    compile 'edu.stanford.nlp:stanford-corenlp:3.6.0:models'
    compile 'log4j:log4j:1.2.17'
    compile 'com.opencsv:opencsv:3.6'
    /*compile 'com.googlecode.efficient-java-matrix-library:ejml:0.23'*/
    compile 'junit:junit:4.12'
    compile 'com.google.guava:guava:21.0'
    //compile 'eu.fbk.ict.fm.nlp:synaptic:1.0-SNAPSHOT'
    compile 'org.apache.jena:jena-core:3.4.0'
    compile 'com.github.jaytaylor:jaws:1.3.1'
    compile 'uk.ac.gate:gate-core:6.1'
    compile 'uk.ac.gate:jaspell:0.3.1'
    compile 'edu.stanford.nlp:stanford-corenlp:3.8.0'
    compile 'edu.mit:jwi:2.2.3'
    compile files('lib/synaptic-1.0-SNAPSHOT-jar-with-dependencies.jar')
}


configurations.all {
    //Avoids conflict: SL4J Multiple bindings were found on the class path
    exclude group: "org.slf4j", module: "log4j-over-slf4j"
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
resolutionStrategy {
        force 'xml-apis:xml-apis:1.4.01'
    }
}

dependencies {
    runtime files('src/main/resources')
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.2'
}

// Test execution JVM properties
tasks.withType(Test){
    systemProperty 'is.admin.user', System.getProperty ('is.admin.user', 'admin@atos.supersede.eu')
    systemProperty 'is.admin.passwd', System.getProperty ('is.admin.passwd', 'rtgWCyrc')
    systemProperty 'supersede.if.properties', System.getProperty ('supersede.if.properties', 'if.properties')
}

// Test execution filter
/*test {
    filter {
        includeTestsMatching "*MailProxyTest"
        includeTestsMatching "*FEDataStoreProxyTest"
        includeTestsMatching "*IFAuthenticationManagerTest"
    }
} */

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

group = 'eu.supersede.feedbackanalysis'
version = '0.1.0-SNAPSHOT'
jar {
    baseName = 'FeedbackAnalysis'
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    String repo = version.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
    publish {
        repository {
            repoKey = repo
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            publications ('mavenJava')
        }
    }
    resolve {
        repository {
            repoKey = 'libs-snapshot'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}

artifactoryPublish {
    dependsOn jar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
